[null,{"name":"Status","temp":"","event-type":"0","_id":"sOWVz","actions":[{"activity":"0","nameText":"!pomoc","url":"","stat":"0","name":"Set Bot Activity"}]},{"name":"PointsSystem-event","temp":"message","event-type":"2","_id":"XEBZK","actions":[{"message":"1","varName":"message","info":"3","storage":"1","varName2":"message-author","name":"Store Message Info"},{"member":"2","varName":"message-author","dataName":"cash","defaultVal":"0","storage":"1","varName2":"member-cash","name":"Store Member Data"},{"FirstNumber":"${tempVars(\"member-cash\")}","info":"0","SecondNumber":"1","storage":"1","varName":"cash-receive","name":"Basic Math Operation"},{"member":"2","varName":"message-author","dataName":"cash","changeType":"0","value":"tempVars(\"cash-receive\")","name":"Control Member Data"},{"time":"60","measurement":"1","name":"Wait"}]},{"name":"Jackpot Reaction Added","temp":"reaction","event-type":"28","_id":"acYUa","actions":[{"reaction":"1","varName":"reaction","info":"7","storage":"1","varName2":"member","name":"Store Reaction Info"},{"reaction":"1","varName":"reaction","info":"3","storage":"1","varName2":"reaction-name","name":"Store Reaction Info"},{"member":"2","varName":"member","info":"0","varName2":"","iftrue":"1","iftrueVal":"","iffalse":"0","iffalseVal":"","name":"Check If Member"},{"server":"0","varName":"","dataName":"jackpot-message","comparison":"4","value":"1","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Server Data"},{"reaction":"1","varName":"reaction","info":"0","storage":"1","varName2":"messsage-object","name":"Store Reaction Info"},{"message":"1","varName":"messsage-object","info":"1","storage":"1","varName2":"message-id","name":"Store Message Info"},{"message":"1","varName":"messsage-object","info":"4","storage":"1","varName2":"message-channel","name":"Store Message Info"},{"server":"0","varName":"","dataName":"jackpot-message","comparison":"1","value":"tempVars(\"message-id\")","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Server Data"},{"storage":"1","varName":"reaction-name","comparison":"1","value":"'💵'","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"server":"0","varName":"","dataName":"jackpot-entry","defaultVal":"0","storage":"1","varName2":"jackpot-entry","name":"Store Server Data"},{"server":"0","varName":"","dataName":"jackpot-prize","defaultVal":"0","storage":"1","varName2":"prize","name":"Store Server Data"},{"server":"0","varName":"","dataName":"jackpot-max-players","defaultVal":"0","storage":"1","varName2":"max-players","name":"Store Server Data"},{"member":"2","varName":"member","dataName":"cash","comparison":"4","value":"tempVars(\"jackpot-entry\")","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"45","name":"Check Member Data"},{"member":"2","varName":"member","dataName":"cash","defaultVal":"0","storage":"1","varName2":"member-cash","name":"Store Member Data"},{"FirstNumber":"${tempVars(\"member-cash\")}","info":"1","SecondNumber":"${tempVars(\"jackpot-entry\")}","storage":"1","varName":"set-cash","name":"Basic Math Operation"},{"member":"2","varName":"member","dataName":"cash","changeType":"0","value":"tempVars(\"set-cash\")","name":"Control Member Data"},{"title":"Member Joined!","author":"Jackpot","color":"RANDOM","timestamp":"true","url":"","authorIcon":"https://image.flaticon.com/icons/png/512/536/536101.png","imageUrl":"","thumbUrl":"","storage":"1","varName":"join-embed","name":"Create Embed Message"},{"storage":"1","varName":"join-embed","message":"${tempVars(\"member\")} paid ${tempVars(\"jackpot-entry\")} cash and joined to the jackpot!","name":"Set Embed Description"},{"storage":"1","varName":"join-embed","channel":"5","varName2":"message-channel","storage3":"0","varName3":"","name":"Send Embed Message"},{"reaction":"1","varName":"reaction","info":"4","storage":"1","varName2":"reaction-count","name":"Store Reaction Info"},{"FirstNumber":"${tempVars(\"reaction-count\")}","info":"1","SecondNumber":"1","storage":"1","varName":"members-reactions","name":"Basic Math Operation"},{"storage":"1","varName":"members-reactions","comparison":"1","value":"tempVars(\"max-players\")","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"reaction":"1","varName":"reaction","info":"2","storage":"1","varName2":"reaction-list","name":"Store Reaction Info"},{"list":"7","varName":"reaction-list","getType":"2","position":"","storage":"1","varName2":"random-member","name":"Get Item from List"},{"member":"2","varName":"random-member","info":"1","storage":"1","varName2":"member-id","name":"Store Member Info"},{"info":"0","find":"${tempVars(\"member-id\")}","storage":"1","varName":"member-won","name":"Find Member"},{"member":"2","varName":"member-won","info":"0","varName2":"","iftrue":"2","iftrueVal":"22","iffalse":"0","iffalseVal":"","name":"Check If Member"},{"info":"1","find":"Premium","storage":"1","varName":"premium-role","name":"Find Role"},{"member":"2","varName":"member-won","role":"3","varName2":"premium-role","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"3","name":"Check If Member has Role"},{"FirstNumber":"${tempVars(\"prize\")}","info":"2","SecondNumber":"1.0","storage":"1","varName":"prize-after-math","name":"Basic Math Operation"},{"storage":"1","varName":"Tax","changeType":"0","value":"\"0% (Premium)\"","name":"Control Variable"},{"count":"2","name":"Skip Actions"},{"FirstNumber":"${tempVars(\"prize\")}","info":"2","SecondNumber":"0.9","storage":"1","varName":"prize-after-math","name":"Basic Math Operation"},{"storage":"1","varName":"Tax","changeType":"0","value":"\"10%\"","name":"Control Variable"},{"title":"Winner!","author":"Jackpot","color":"RANDOM","timestamp":"true","url":"","authorIcon":"https://image.flaticon.com/icons/png/512/536/536101.png","imageUrl":"","thumbUrl":"","storage":"1","varName":"winner-embed","name":"Create Embed Message"},{"storage":"1","varName":"winner-embed","message":"${tempVars(\"random-member\")} won the jackpot!","name":"Set Embed Description"},{"storage":"1","varName":"winner-embed","fieldName":"Prize","message":"${tempVars(\"prize\")}","inline":"0","name":"Add Embed Field"},{"storage":"1","varName":"winner-embed","fieldName":"Tax","message":"${tempVars(\"Tax\")}","inline":"0","name":"Add Embed Field"},{"storage":"1","varName":"winner-embed","fieldName":"Total Cash","message":"${Math.floor(tempVars(\"prize-after-math\"))}","inline":"0","name":"Add Embed Field"},{"storage":"1","varName":"winner-embed","channel":"5","varName2":"message-channel","storage3":"0","varName3":"","name":"Send Embed Message"},{"member":"2","varName":"member-won","dataName":"cash","defaultVal":"0","storage":"1","varName2":"winner-cash","name":"Store Member Data"},{"FirstNumber":"${tempVars(\"winner-cash\")}","info":"0","SecondNumber":"${Math.floor(tempVars(\"prize-after-math\"))}","storage":"1","varName":"winner-set-cash","name":"Basic Math Operation"},{"member":"2","varName":"member-won","dataName":"cash","changeType":"0","value":"tempVars(\"winner-set-cash\")","name":"Control Member Data"},{"server":"0","varName":"","dataName":"jackpot-message","changeType":"0","value":"0","name":"Control Server Data"},{"name":"End Action Sequence"},{"channel":"5","varName":"member","message":"I'm sorry, You don't have enough cash to entry to the jackpot.","storage":"0","varName2":"","iffalse":"0","iffalseVal":"","name":"Send Message"},{"reaction":"1","varName":"reaction","member":"2","varName2":"member","name":"Remove Reaction"}]},{"name":"cleverbot","permissions":"NONE","restriction":"1","_id":"PFVog","actions":[{"message":"0","varName":"","info":"1","ParamN":"1","separator":"","storage":"1","varName2":"tekst","name":"Store Message Params"},{"token":"","user":"","pass":"","url":"https://some-random-api.ml/chatbot?message=${tempVars(\"tekst\")}","path":"response","storage":"1","varName":"odpowiedz","debugMode":"1","headers":"","name":"Store Json From WebAPI"},{"title":"CleverBOT IVONA","author":"","color":"RANDOM","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"embedmes","name":"Create Embed Message"},{"storage":"1","varName":"embedmes","message":"${tempVars(\"odpowiedz\")}","name":"Set Embed Description"},{"storage":"1","varName":"embedmes","channel":"0","varName2":"","storage3":"0","varName3":"","iffalse":"0","iffalseVal":"","name":"Send Embed Message"}],"_aliases":["clb"]},{"name":"<font color=\"#000\"> MemberVoiceUpdate </font> ","temp":"prior","event-type":"0","_id":"JYPVw","actions":[{"behavior":"1","interpretation":"1","code":"const joinChannel = serverVars(\"createVoice\");\nif (joinChannel) {\n    if (me.permissions.has('MOVE_MEMBERS')) {\n        if (me.permissions.has('MANAGE_CHANNELS')) {\n            const newUserChannel = tempVars(\"after\")\n                .voiceChannel;\n            const oldUserChannel = tempVars(\"prior\")\n                .voiceChannel;\n            const TheUser = tempVars(\"after\");\n            const parent_ID = joinChannel.parentID;\n            const server = cache.server;\n            const Vname = TheUser.displayName + \"-private\";\n            const options = {\n                type: 'voice',\n                parent: parent_ID,\n                permissionOverwrites: [{\n                    id: server.id,\n                    deny: ['CONNECT']\n                }, {\n                    id: TheUser.id,\n                    allow: ['CONNECT', 'MANAGE_ROLES']\n                }]\n            };\n\n            if (newUserChannel == joinChannel) {\n                if (oldUserChannel && oldUserChannel.name == Vname) {\n                    oldUserChannel.delete();\n                    server.createChannel(Vname, options)\n                        .then(function (channel) {\n                            TheUser.setVoiceChannel(channel);\n                        }.bind(this))\n                        .catch(this.displayError.bind(this));\n                } else {\n                    server.createChannel(Vname, options)\n                        .then(function (channel) {\n                            TheUser.setVoiceChannel(channel);\n                        }.bind(this))\n                        .catch(this.displayError.bind(this));\n                }\n            } else if (oldUserChannel && oldUserChannel !== joinChannel && oldUserChannel.members.size == 0 && oldUserChannel.name == Vname) {\n                oldUserChannel.delete();\n            } else if (oldUserChannel && oldUserChannel !== joinChannel && oldUserChannel.members.size == 0 && oldUserChannel.name.includes('-private')) {\n                oldUserChannel.delete();\n            }\n        } else {\n            console.log('The bot is missing MANAGE_CHANNELS permission.');\n        }\n    } else {\n        console.log('The bot is missing MOVE_MEMBERS permission.');\n    }\n}","storage":"0","varName":"","name":"Run Script"}],"temp2":"after"},{"name":"<font color=\"#000\"> ReactionRole #1 </font> ","temp":"msgReaction","event-type":"28","_id":"zimku","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nvar rectarray = globalVars('reactionRoleInf');\nvar usrWhoReacted = reaction.users.last();\nconst _this = this;\nconst fs = require('fs');\nvar messageSent = 'Successfully added the role {roleName} in {server}';\n// The only variables that work rn, {rolename} and {server}\nvar interval;\n\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\nasync function checkRoles() {\n    try {\n        if (usrWhoReacted.id != client.user.id) {\n\n            if (rectarray[msgRct.id] != null) {\n                var newArr = rectarray[msgRct.id];\n                for (io = 0; io < newArr.length; io++) {\n                    if (newArr[io][0] == reaction.emoji.name || newArr[io][0].name == reaction.emoji.name) {\n                        var newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n                        var checkRole = await msgRct.guild.roles.get(newArr[io][1])\n                        if (checkRole != null) {\n                            let newUserArrayIds = [];\n                            let newUserArray = await reaction.users.array();\n\n                            newUserArray.forEach(useritem => {\n                                newUserArrayIds.push(useritem.id)\n                            });\n                            rectarray[msgRct.id][io][3] = newUserArrayIds;\n                            if (newUsr.roles.has(newArr[io][1])) {\n\n                                _this.storeValue(rectarray, 3, 'reactionRoleInf', cache)\n                                fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                                    if (err) {\n                                        return console.log(err);\n                                    }\n                                });\n                                break;\n                            } else {\n\n                                newUsr.addRole(checkRole);\n                                if (dmUserAfter) {\n                                    messageSent = messageSent.replace(/{roleName}/g, checkRole.name);\n                                    messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n                                    newUsr.send(messageSent);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_this.storeValue(rectarray, 3, 'reactionRoleInf', cache)\n                                fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                                    if (err) {\n                                        return console.log(err);\n                                    }\n                                });\n                                break;\n                            }\n                        } else {\n                            delete rectarray[msgRct.id];\n                            _this.storeValue(rectarray, 3, 'reactionRoleInf', cache);\n\n                            msgRct.edit({\n                                embed: {\n                                    color: 0xff0000,\n                                    title: \"Role Reaction Menu\",\n                                    description: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n                                    timestamp: new Date()\n                                }\n                            });\n                            _this.callNextAction(cache);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"}]},{"name":"<font color=\"#000\"> ReactionRole #2 </font> ","temp":"msgReaction","event-type":"29","_id":"ZQmhC","actions":[{"reaction":"1","varName":"msgReaction","info":"0","storage":"1","varName2":"messageRct","name":"Store Reaction Info"},{"behavior":"1","interpretation":"1","code":"const reaction = tempVars('msgReaction');\nconst msgRct = tempVars('messageRct');\nvar rectarray = globalVars('reactionRoleInf');\nlet usrWhoReacted = reaction.users.array();\nconst _this = this;\nconst fs = require('fs');\n\nlet newUserArrayIds = [];\nlet newUserArray = reaction.users.array();\n\nnewUserArray.forEach(useritem => {\n    newUserArrayIds.push(useritem.id)\n});\n\nvar messageSent = 'Successfully removed the role {roleName} in {server}';\n// The only variables that work rn, {rolename} and {server}\nvar actualUser;\n// Setings\n\nconst dmUserAfter = true; // Default, can be changed to false\n\n//\nasync function checkRoles() {\n    try {\n        if (rectarray[msgRct.id] != null) {\n            var newArr = rectarray[msgRct.id];\n            for (io = 0; io < newArr.length; io++) {\n                if (newArr[io][0] == reaction.emoji.name || newArr[io][0].name == reaction.emoji.name) {\n                    if (rectarray[msgRct.id][io][3] != null) {\n                        usrWhoReacted = rectarray[msgRct.id][io][3].filter(val => !newUserArrayIds.includes(val))[0];\n                        if (usrWhoReacted != null) {\n                            var newUsr = await msgRct.guild.fetchMember(usrWhoReacted);\n                            var checkRole = await msgRct.guild.roles.get(newArr[io][1]);\n                            if (checkRole != null) {\n                                if (!newUsr.roles.has(newArr[io][1])) {\n                                    var newUsrIDs = [];\n                                    var arrUsrIds = await reaction.users.array();\n                                    arrUsrIds.forEach(useritem => {\n                                        newUsrIDs.push(useritem.id)\n                                    });\n                                    rectarray[msgRct.id][io][3] = newUsrIDs;\n                                    _this.storeValue(rectarray, 3, 'reactionRoleInf', cache);\n                                    fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                                        if (err) {\n                                            return console.log(err);\n                                        }\n                                    });\n                                    break;\n                                } else {\n                                    var newUsrIDs = [];\n                                    var arrUsrIds = await reaction.users.array();\n                                    arrUsrIds.forEach(useritem => {\n                                        newUsrIDs.push(useritem.id)\n                                    });\n                                    rectarray[msgRct.id][io][3] = newUsrIDs;\n                                    _this.storeValue(rectarray, 3, 'reactionRoleInf', cache)\n                                    newUsr.removeRole(checkRole);\n                                    if (dmUserAfter) {\n                                        messageSent = messageSent.replace(/{roleName}/g, checkRole.name);\n                                        messageSent = messageSent.replace(/{server}/g, msgRct.guild.name);\n                                        newUsr.send(messageSent);\n                                    }\n                                    fs.writeFile(\"./data/reactionRoleData.json\", JSON.stringify(rectarray), function(err) {\n                                        if (err) {\n                                            return console.log(err);\n                                        }\n                                    });\n                                    break;\n                                }\n                            } else {\n                                delete rectarray[msgRct.id];\n                                _this.storeValue(rectarray, 3, 'reactionRoleInf', cache);\n                                msgRct.edit({\n                                    embed: {\n                                        color: 0xff0000,\n                                        title: \"Role Reaction Menu\",\n                                        description: `An error has occured.\\nOne of the roles, role name - ${newArr[io][2]} does not exist anymore.\\nIn turn, this embed has now shutdown.\\nPlease remake the embed.`,\n                                        timestamp: new Date()\n                                    }\n                                });\n                                _this.callNextAction(cache);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\n\ncheckRoles();","storage":"0","varName":"","name":"Run Script"}]},{"name":"<font color=\"#000\"> ReactionRole #3 </font> ","temp":"","event-type":"1","_id":"Lwriz","actions":[{"behavior":"0","interpretation":"1","code":"const _this = this;\nconst fs = require('fs');\nvar someArray = [];\nvar someNum = 0;\nvar globalData;\nvar interval;\n\nfunction fetchMessages() {\n    if (someNum != someArray.length) {\n        var channelToFetch = client.channels.get(someArray[someNum]);\n        if (channelToFetch != null) {\n           channelToFetch.fetchMessages({ limit: 100 });\n           console.log(`Fetched messages in channel id ${someArray[someNum]}`);\n           someNum = someNum + 1;\n        } else {\n           delete globalData[someArray[someNum]];\n           fs.writeFile(\"./resources/serverRoleMenu.json\", JSON.stringify(globalData), function(err) {\n               if(err) {\n                   return console.log(err);\n               }\n           }); \n        }\n    } else {\n       console.log('Finished fetching messages from all logged servers.')\n       clearInterval(interval);\n    }\n   }\n\nif(fs.existsSync('./data/reactionRoleData.json')) {\n    fs.readFile('./data/reactionRoleData.json', function read(err, data) {\n        if (err) {\n            throw err;\n        }\n        data = JSON.parse(data)\n    \n        _this.storeValue(data, 3, 'reactionRoleInf', cache);\n    });\n} else {\n    fs.writeFile(\"./data/reactionRoleData.json\", \"{}\", function(err) {\n        if(err) {\n            return console.log(err);\n        }\n    });\n    _this.storeValue({}, 3, 'reactionRoleInf', cache);\n}\n\n\n\nif(fs.existsSync('./resources/serverRoleMenu.json')) {\n    fs.readFile('./resources/serverRoleMenu.json', async function read(err, data) {\n        if (err) {\n            throw err;\n        }\n        var DataToLoop = JSON.parse(data);\n        globalData = DataToLoop;\n        for (var key in DataToLoop) {\n            if (DataToLoop.hasOwnProperty(key)) {\n                await someArray.push(DataToLoop[key]);\n            }\n        }\n        interval = setInterval(fetchMessages, 2000);\n    })\n\n} else {\n    fs.writeFile(\"./resources/serverRoleMenu.json\", \"{}\", function(err) {\n        if(err) {\n            return console.log(err);\n        }\n    });\n}\n\n","storage":"0","varName":"","name":"Run Script"}]},{"name":"<font color=\"#000\"> ReactionRole #4 </font> ","temp":"reactions","event-type":"28","_id":"kdOSw","actions":[{"server":"0","varName":"","info":"1","storage":"1","varName2":"serwer-id","name":"Store Server Info"},{"reaction":"1","varName":"reactions","info":"0","storage":"1","varName2":"message object","name":"Store Reaction Info"},{"message":"1","varName":"message object","info":"4","storage":"1","varName2":"channel","name":"Store Message Info"},{"message":"1","varName":"message object","info":"1","storage":"1","varName2":"id wiad","name":"Store Message Info"},{"server":"0","varName":"","dataName":"channel.wiad.reaction.${tempVars(\"serwer-id\")}.${tempVars(\"id wiad\")}","defaultVal":"0","storage":"1","varName2":"channel.wiad","name":"Store Server Data"},{"server":"0","varName":"","dataName":"id.wiad.reaction.${tempVars(\"serwer-id\")}.${tempVars(\"id wiad\")}","defaultVal":"0","storage":"1","varName2":"id.wiad","name":"Store Server Data"},{"server":"0","varName":"","dataName":"reaction.${tempVars(\"serwer-id\")}.${tempVars(\"id wiad\")}","defaultVal":"0","storage":"1","varName2":"reackaje","name":"Store Server Data"},{"server":"0","varName":"","dataName":"channel.wiad.reaction.${tempVars(\"serwer-id\")}.${tempVars(\"id wiad\")}","defaultVal":"0","storage":"1","varName2":"id-rolii","name":"Store Server Data"},{"channel":"3","varName":"channel.wiad","info":"1","search":"${tempVars(\"id wiad\")}","storage":"1","varName2":"698489713522114622","name":"Find Message"},{"message":"1","varName":"find-message","info":"1","find":"${tempVars(\"reackaje\")}","storage":"1","varName2":"'😭'","name":"Find Reaction"},{"reaction":"1","varName":"find-reaction","info":"7","storage":"1","varName2":"last-user","name":"Store Reaction Info"},{"info":"0","find":"${tempVars(\"id-rolii\")}","storage":"1","varName":"698488304399810582","name":"Find Role"},{"member":"2","varName2":"last-user","role":"3","varName":"find-role","name":"Add Member Role"}]},{"name":"<font color=\"#000\"> Logi </font> ","temp":"wiad","event-type":"18","_id":"BFwCn","actions":[{"info":"0","find":"709126470219595877","storage":"1","varName":"kanal","name":"Find Channel"},{"message":"1","varName":"wiad","info":"3","storage":"1","varName2":"autor","name":"Store Message Info"},{"message":"1","varName":"wiad","info":"4","storage":"1","varName2":" kanal1","name":"Store Message Info"},{"member":"2","varName":"autor","info":"16","storage":"1","varName2":"url","name":"Store Member Info"},{"member":"2","varName":"autor","info":"22","storage":"1","varName2":"tag","name":"Store Member Info"},{"title":"Usunięta Wiadomość","author":"","color":"CE1515","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"","timestamp":"true","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","message":"${tempVars(\"wiad\")}\n${tempVars(\" kanal1\")}\n","name":"Set Embed Description"},{"storage":"1","varName":"embed","message":"Od kogo?: ${tempVars(\"tag\")}","footerIcon":"${tempVars(\"url\")}","name":"Set Embed Footer"},{"storage":"1","varName":"embed","channel":"5","varName2":"kanal","storage3":"0","varName3":"","name":"Send Embed Message"}]},{"name":"Wejscie","temp":"user","event-type":"6","_id":"XlBGu","actions":[{"info":"0","find":"707229283587850270","storage":"1","varName":"channel","name":"Find Channel"},{"server":"0","varName":"","info":"17","storage":"1","varName2":"ktory","name":"Store Server Things"},{"member":"2","varName":"user","info":"16","storage":"1","varName2":"avatar_URL","name":"Store Member Info"},{"title":"**Witaj**","author":"","color":"C71585","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"${tempVars(\"avatar_URL\")}","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","fieldName":"","message":"**${tempVars(\"user\")}** jesteś naszym **${tempVars(\"ktory\")}** użytkownikiem! 🤩 \n\nAby zacząć zabawę na naszym serwerze:\n\n🌟 │Zweryfikuj się na #『🤠』weryfikacja wpisując !weryfikacja i przepisaniem kodu wysłanego przez bota\n\n🌟 │Zapoznaj się z 『📜』regulamin\n\n🌟 │Wybierz rangi na 『🧭』rangi","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"embed","channel":"5","varName2":"channel","storage3":"0","varName3":"","iffalse":"0","iffalseVal":"","name":"Send Embed Message"}]},{"name":"NewEvent","temp":"","event-type":"6","_id":"uPWNz","actions":[]},{"name":"Wyjscie","temp":"user","event-type":"7","_id":"VLVbf","actions":[{"info":"0","find":"707229283587850270","storage":"1","varName":"channel","name":"Find Channel"},{"server":"0","varName":"","info":"17","storage":"1","varName2":"ile","name":"Store Server Things"},{"member":"2","varName":"user","info":"16","storage":"1","varName2":"avatar_URL","name":"Store Member Info"},{"title":"**Żegnaj**","author":"","color":"C71585","url":"","authorIcon":"","authorUrl":"","imageUrl":"","thumbUrl":"${tempVars(\"avatar_URL\")}","timestamp":"false","debug":"false","text":"","year":"","month":"","day":"","hour":"","minute":"","second":"","storage":"1","varName":"embed","name":"Create Embed Message"},{"storage":"1","varName":"embed","fieldName":"","message":"**${tempVars(\"user\")}** wyszedł z naszego serwera. Zostało **${tempVars(\"ile\")}** użytkowników 😕\nBędzie nam Ciebie brakowało! 🤧","inline":"1","name":"Add Embed Field"},{"storage":"1","varName":"embed","channel":"5","varName2":"channel","storage3":"0","varName3":"","iffalse":"0","iffalseVal":"","name":"Send Embed Message"}]}]